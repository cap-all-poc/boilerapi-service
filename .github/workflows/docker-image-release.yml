name: Build and Publish Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build the Docker image without pushing.  This step ensures that build
      # failures are caught early on pushes to the main branches and tags.
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ghcr.io/${{ github.repository }}:test

  release:
    # Only run the release job for tags starting with v
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      # Build the image again and push it with the tag that matches the release.
      # Using the release tag (e.g. v1.0.6) ensures the Docker image version
      # aligns with the Python wheel.
      - name: Build and push release image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}